diff -Nur busybox-1.5.0.orig/include/libbb.h busybox-1.5.0/include/libbb.h
--- busybox-1.5.0.orig/include/libbb.h	2007-03-22 20:21:35.000000000 +0000
+++ busybox-1.5.0/include/libbb.h	2007-04-04 22:46:32.000000000 +0100
@@ -17,6 +17,7 @@
 #include <errno.h>
 #include <fcntl.h>
 #include <inttypes.h>
+#include <mntent.h>
 #include <netdb.h>
 #include <setjmp.h>
 #include <signal.h>
@@ -539,6 +540,7 @@
 extern void run_applet_by_name(const char *name, int argc, char **argv);
 #endif
 
+extern int match_fstype(const struct mntent *mt, const char *fstypes);
 extern struct mntent *find_mount_point(const char *name, const char *table);
 extern void erase_mtab(const char * name);
 extern unsigned int tty_baud_to_value(speed_t speed);
diff -Nur busybox-1.5.0.orig/libbb/Kbuild busybox-1.5.0/libbb/Kbuild
--- busybox-1.5.0.orig/libbb/Kbuild	2007-03-22 20:21:31.000000000 +0000
+++ busybox-1.5.0/libbb/Kbuild	2007-04-04 22:46:32.000000000 +0100
@@ -51,6 +51,7 @@
 lib-y += login.o
 lib-y += make_directory.o
 lib-y += makedev.o
+lib-y += match_fstype.o
 lib-y += md5.o
 lib-y += messages.o
 lib-y += mode_string.o
diff -Nur busybox-1.5.0.orig/libbb/match_fstype.c busybox-1.5.0/libbb/match_fstype.c
--- busybox-1.5.0.orig/libbb/match_fstype.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.5.0/libbb/match_fstype.c	2007-04-04 22:54:36.000000000 +0100
@@ -0,0 +1,42 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * Match fstypes for use in mount unmount
+ * We accept notmpfs,nfs but not notmpfs,nonfs
+ * This allows us to match fstypes that start with no like so
+ *   mount -at ,noddy
+ *
+ * Returns 0 for a match, otherwise -1
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this tarball for details.
+ */
+
+#include "libbb.h"
+
+int match_fstype (const struct mntent *mt, const char *fstype)
+{
+	int no = 0;
+	int len;
+
+	if (!mt)
+		return -1;
+		  
+	if (!fstype)
+		return 0;
+
+	if (fstype[0] == 'n' && fstype[1] == 'o') {
+		no = -1;
+		fstype += 2;
+	}
+
+	len = strlen (mt->mnt_type);
+	while (fstype) {
+		if (!strncmp(mt->mnt_type, fstype, len) &&
+			(!fstype[len] || fstype[len] == ','))
+			return no;
+		if ((fstype = index(fstype,',')))
+			fstype++;
+	}
+
+	return -(no + 1);
+}
+
diff -Nur busybox-1.5.0.orig/util-linux/mount.c busybox-1.5.0/util-linux/mount.c
--- busybox-1.5.0.orig/util-linux/mount.c	2007-03-22 20:21:39.000000000 +0000
+++ busybox-1.5.0/util-linux/mount.c	2007-04-04 22:55:31.000000000 +0100
@@ -77,6 +77,7 @@
 		{"defaults", 0},
 		/* {"quiet", 0}, - do not filter out, vfat wants to see it */
 		{"noauto", MOUNT_NOAUTO},
+		{"sw", MOUNT_SWAP},
 		{"swap", MOUNT_SWAP},
 		USE_DESKTOP({"user",  MOUNT_USERS},)
 		USE_DESKTOP({"users", MOUNT_USERS},)
@@ -1703,9 +1704,7 @@
 
 		} else {
 			// Do we need to match a filesystem type?
-			// TODO: support "-t type1,type2"; "-t notype1,type2"
-
-			if (fstype && strcmp(mtcur->mnt_type, fstype)) continue;
+			if (fstype && match_fstype (mtcur, fstype)) continue;
 
 			// Skip noauto and swap anyway.
 
diff -Nur busybox-1.5.0.orig/util-linux/umount.c busybox-1.5.0/util-linux/umount.c
--- busybox-1.5.0.orig/util-linux/umount.c	2007-03-22 20:21:39.000000000 +0000
+++ busybox-1.5.0/util-linux/umount.c	2007-04-04 22:46:32.000000000 +0100
@@ -12,7 +12,7 @@
 #include <mntent.h>
 #include <getopt.h>
 
-#define OPTION_STRING		"flDnravd"
+#define OPTION_STRING		"flDnravdt:"
 #define OPT_FORCE			1
 #define OPT_LAZY			2
 #define OPT_DONTFREELOOP	4
@@ -27,6 +27,7 @@
 	char path[2*PATH_MAX];
 	struct mntent me;
 	FILE *fp;
+	char *fstype = 0;
 	int status = EXIT_SUCCESS;
 	unsigned opt;
 	struct mtab_list {
@@ -37,7 +38,7 @@
 
 	/* Parse any options */
 
-	opt = getopt32(argc, argv, OPTION_STRING);
+	opt = getopt32(argc, argv, OPTION_STRING, &fstype);
 
 	argc -= optind;
 	argv += optind;
@@ -61,6 +62,8 @@
 			bb_error_msg_and_die("cannot open %s", bb_path_mtab_file);
 	} else {
 		while (getmntent_r(fp, &me, path, sizeof(path))) {
+			/* Match fstype if passed */
+			if (fstype && match_fstype (&me, fstype)) continue;
 			m = xmalloc(sizeof(struct mtab_list));
 			m->next = mtl;
 			m->device = xstrdup(me.mnt_fsname);
@@ -71,7 +74,7 @@
 	}
 
 	/* If we're not umounting all, we need at least one argument. */
-	if (!(opt & OPT_ALL)) {
+	if (!(opt & OPT_ALL) && !fstype) {
 		m = 0;
 		if (!argc) bb_show_usage();
 	}
